// A C++ Program to implement Odd-Even / Brick Sort 

#include<iostream.h> 

int n;
void oddEvenSort(int arr[]) 
{ 
	bool isSorted = false; 			// Initially array is unsorted 

	while (!isSorted) 
	{ 
		isSorted = true; 
						// Perform Bubble sort on odd indexed element 
		for (int i=1; i<=n-2; i=i+2) 
		{ 
			if (arr[i] > arr[i+1]) 
			{ 
				swap(arr[i], arr[i+1]); 
				isSorted = false; 
			} 
		} 

						// Perform Bubble sort on even indexed element 
		for (int i=0; i<=n-2; i=i+2) 
		{ 
			if (arr[i] > arr[i+1]) 
			{ 
				swap(arr[i], arr[i+1]); 
				isSorted = false; 
			} 
		} 
	} 

} 
	void swap(int *a,int *b)
	{ 	int temp;
     		 temp=*a;
     		  *a=*b;	
		*b=temp;
	}

						// print array
void printArray(int arr[]) 
{ 
for (int i=0; i < n; i++) 
	{	cout << arr[i] << " ";
                }  

	cout << "\n"; 
} 

 void main() 
{ 
	int arr[20];
	
	cout<<"enter the number of elements";
	cin>>n;
	cout<<"\nenter the elements";
	for(int i=0;i<n;i++)
	cin>>a[i];
             
	 

	oddEvenSort(arr); 
	printArray(arr); 

	 
} 
